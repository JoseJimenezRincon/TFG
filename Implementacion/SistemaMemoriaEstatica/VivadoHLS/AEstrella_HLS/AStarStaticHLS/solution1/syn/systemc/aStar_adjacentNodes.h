// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _aStar_adjacentNodes_HH_
#define _aStar_adjacentNodes_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct aStar_adjacentNodes : public sc_module {
    // Port declarations 32
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > x;
    sc_in< sc_lv<32> > y;
    sc_out< sc_lv<3> > adjacentPosition_2_address0;
    sc_out< sc_logic > adjacentPosition_2_ce0;
    sc_out< sc_logic > adjacentPosition_2_we0;
    sc_out< sc_lv<32> > adjacentPosition_2_d0;
    sc_out< sc_lv<3> > adjacentPosition_2_address1;
    sc_out< sc_logic > adjacentPosition_2_ce1;
    sc_out< sc_logic > adjacentPosition_2_we1;
    sc_out< sc_lv<32> > adjacentPosition_2_d1;
    sc_out< sc_lv<3> > adjacentPosition_0_address0;
    sc_out< sc_logic > adjacentPosition_0_ce0;
    sc_out< sc_logic > adjacentPosition_0_we0;
    sc_out< sc_lv<32> > adjacentPosition_0_d0;
    sc_out< sc_lv<3> > adjacentPosition_0_address1;
    sc_out< sc_logic > adjacentPosition_0_ce1;
    sc_out< sc_logic > adjacentPosition_0_we1;
    sc_out< sc_lv<32> > adjacentPosition_0_d1;
    sc_out< sc_lv<3> > adjacentPosition_1_address0;
    sc_out< sc_logic > adjacentPosition_1_ce0;
    sc_out< sc_logic > adjacentPosition_1_we0;
    sc_out< sc_lv<32> > adjacentPosition_1_d0;
    sc_out< sc_lv<3> > adjacentPosition_1_address1;
    sc_out< sc_logic > adjacentPosition_1_ce1;
    sc_out< sc_logic > adjacentPosition_1_we1;
    sc_out< sc_lv<32> > adjacentPosition_1_d1;


    // Module declarations
    aStar_adjacentNodes(sc_module_name name);
    SC_HAS_PROCESS(aStar_adjacentNodes);

    ~aStar_adjacentNodes();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<18> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_36;
    sc_signal< sc_lv<32> > initPosition_fu_177_p2;
    sc_signal< sc_lv<32> > initPosition_reg_297;
    sc_signal< sc_lv<1> > tmp_7_fu_233_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_307;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_92;
    sc_signal< sc_lv<1> > tmp_8_fu_238_p2;
    sc_signal< sc_lv<1> > tmp_8_reg_311;
    sc_signal< sc_lv<32> > tmp_10_fu_243_p2;
    sc_signal< sc_lv<32> > tmp_10_reg_315;
    sc_signal< sc_lv<32> > tmp_11_fu_249_p2;
    sc_signal< sc_lv<32> > tmp_11_reg_320;
    sc_signal< sc_lv<1> > tmp_12_fu_255_p2;
    sc_signal< sc_lv<1> > tmp_12_reg_325;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_113;
    sc_signal< sc_lv<1> > tmp_13_fu_260_p2;
    sc_signal< sc_lv<1> > tmp_13_reg_329;
    sc_signal< sc_lv<32> > tmp_14_fu_265_p2;
    sc_signal< sc_lv<32> > tmp_14_reg_333;
    sc_signal< sc_logic > ap_sig_cseq_ST_st12_fsm_11;
    sc_signal< bool > ap_sig_bdd_126;
    sc_signal< sc_lv<32> > tmp_15_fu_271_p2;
    sc_signal< sc_lv<32> > tmp_15_reg_339;
    sc_signal< sc_lv<32> > tmp_3_fu_183_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_136;
    sc_signal< sc_lv<32> > tmp_5_fu_197_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_145;
    sc_signal< sc_lv<32> > tmp_s_fu_209_p2;
    sc_signal< sc_lv<32> > tmp_1_fu_221_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_bdd_156;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_bdd_165;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_10;
    sc_signal< bool > ap_sig_bdd_174;
    sc_signal< sc_logic > ap_sig_cseq_ST_st15_fsm_14;
    sc_signal< bool > ap_sig_bdd_183;
    sc_signal< sc_logic > ap_sig_cseq_ST_st16_fsm_15;
    sc_signal< bool > ap_sig_bdd_192;
    sc_signal< sc_logic > ap_sig_cseq_ST_st18_fsm_17;
    sc_signal< bool > ap_sig_bdd_201;
    sc_signal< sc_lv<32> > tmp_4_fu_190_p2;
    sc_signal< sc_lv<32> > tmp_6_fu_203_p2;
    sc_signal< sc_lv<32> > tmp_9_fu_215_p2;
    sc_signal< sc_lv<32> > tmp_2_fu_227_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_9;
    sc_signal< bool > ap_sig_bdd_225;
    sc_signal< sc_logic > ap_sig_cseq_ST_st17_fsm_16;
    sc_signal< bool > ap_sig_bdd_238;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_260;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_268;
    sc_signal< sc_logic > ap_sig_cseq_ST_st13_fsm_12;
    sc_signal< bool > ap_sig_bdd_324;
    sc_signal< sc_logic > ap_sig_cseq_ST_st14_fsm_13;
    sc_signal< bool > ap_sig_bdd_332;
    sc_signal< sc_lv<32> > tmp_fu_171_p2;
    sc_signal< sc_lv<18> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<18> ap_ST_st1_fsm_0;
    static const sc_lv<18> ap_ST_st2_fsm_1;
    static const sc_lv<18> ap_ST_st3_fsm_2;
    static const sc_lv<18> ap_ST_st4_fsm_3;
    static const sc_lv<18> ap_ST_st5_fsm_4;
    static const sc_lv<18> ap_ST_st6_fsm_5;
    static const sc_lv<18> ap_ST_st7_fsm_6;
    static const sc_lv<18> ap_ST_st8_fsm_7;
    static const sc_lv<18> ap_ST_st9_fsm_8;
    static const sc_lv<18> ap_ST_st10_fsm_9;
    static const sc_lv<18> ap_ST_st11_fsm_10;
    static const sc_lv<18> ap_ST_st12_fsm_11;
    static const sc_lv<18> ap_ST_st13_fsm_12;
    static const sc_lv<18> ap_ST_st14_fsm_13;
    static const sc_lv<18> ap_ST_st15_fsm_14;
    static const sc_lv<18> ap_ST_st16_fsm_15;
    static const sc_lv<18> ap_ST_st17_fsm_16;
    static const sc_lv<18> ap_ST_st18_fsm_17;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_FFFFFFBF;
    static const sc_lv<32> ap_const_lv32_FFFFFFC1;
    static const sc_lv<32> ap_const_lv32_41;
    static const sc_lv<32> ap_const_lv32_FFFFFFC0;
    static const sc_lv<32> ap_const_lv32_40;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_adjacentPosition_0_address0();
    void thread_adjacentPosition_0_address1();
    void thread_adjacentPosition_0_ce0();
    void thread_adjacentPosition_0_ce1();
    void thread_adjacentPosition_0_d0();
    void thread_adjacentPosition_0_d1();
    void thread_adjacentPosition_0_we0();
    void thread_adjacentPosition_0_we1();
    void thread_adjacentPosition_1_address0();
    void thread_adjacentPosition_1_address1();
    void thread_adjacentPosition_1_ce0();
    void thread_adjacentPosition_1_ce1();
    void thread_adjacentPosition_1_d0();
    void thread_adjacentPosition_1_d1();
    void thread_adjacentPosition_1_we0();
    void thread_adjacentPosition_1_we1();
    void thread_adjacentPosition_2_address0();
    void thread_adjacentPosition_2_address1();
    void thread_adjacentPosition_2_ce0();
    void thread_adjacentPosition_2_ce1();
    void thread_adjacentPosition_2_d0();
    void thread_adjacentPosition_2_d1();
    void thread_adjacentPosition_2_we0();
    void thread_adjacentPosition_2_we1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_113();
    void thread_ap_sig_bdd_126();
    void thread_ap_sig_bdd_136();
    void thread_ap_sig_bdd_145();
    void thread_ap_sig_bdd_156();
    void thread_ap_sig_bdd_165();
    void thread_ap_sig_bdd_174();
    void thread_ap_sig_bdd_183();
    void thread_ap_sig_bdd_192();
    void thread_ap_sig_bdd_201();
    void thread_ap_sig_bdd_225();
    void thread_ap_sig_bdd_238();
    void thread_ap_sig_bdd_260();
    void thread_ap_sig_bdd_268();
    void thread_ap_sig_bdd_324();
    void thread_ap_sig_bdd_332();
    void thread_ap_sig_bdd_36();
    void thread_ap_sig_bdd_92();
    void thread_ap_sig_cseq_ST_st10_fsm_9();
    void thread_ap_sig_cseq_ST_st11_fsm_10();
    void thread_ap_sig_cseq_ST_st12_fsm_11();
    void thread_ap_sig_cseq_ST_st13_fsm_12();
    void thread_ap_sig_cseq_ST_st14_fsm_13();
    void thread_ap_sig_cseq_ST_st15_fsm_14();
    void thread_ap_sig_cseq_ST_st16_fsm_15();
    void thread_ap_sig_cseq_ST_st17_fsm_16();
    void thread_ap_sig_cseq_ST_st18_fsm_17();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_initPosition_fu_177_p2();
    void thread_tmp_10_fu_243_p2();
    void thread_tmp_11_fu_249_p2();
    void thread_tmp_12_fu_255_p2();
    void thread_tmp_13_fu_260_p2();
    void thread_tmp_14_fu_265_p2();
    void thread_tmp_15_fu_271_p2();
    void thread_tmp_1_fu_221_p2();
    void thread_tmp_2_fu_227_p2();
    void thread_tmp_3_fu_183_p2();
    void thread_tmp_4_fu_190_p2();
    void thread_tmp_5_fu_197_p2();
    void thread_tmp_6_fu_203_p2();
    void thread_tmp_7_fu_233_p2();
    void thread_tmp_8_fu_238_p2();
    void thread_tmp_9_fu_215_p2();
    void thread_tmp_fu_171_p2();
    void thread_tmp_s_fu_209_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
