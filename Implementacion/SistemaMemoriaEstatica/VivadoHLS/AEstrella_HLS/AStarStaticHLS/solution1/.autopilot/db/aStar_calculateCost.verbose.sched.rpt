

================================================================
== Vivado HLS Report for 'aStar_calculateCost'
================================================================
* Date:           Fri Jun 30 11:23:19 2017

* Version:        2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)
* Project:        AStarStaticHLS
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.86|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    3|    4|    3|    4|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 5
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / (icmp)
	5  / (!icmp)
4 --> 
	5  / true
5 --> 
* FSM state operations: 

 <State 1>: 3.75ns
ST_1: position_read [1/1] 1.04ns
:0  %position_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %position)

ST_1: tmp_s [1/1] 0.00ns
:4  %tmp_s = sext i32 %position_read to i64

ST_1: node_father_addr [1/1] 0.00ns
:5  %node_father_addr = getelementptr [2304 x i32]* @node_father, i64 0, i64 %tmp_s

ST_1: node_father_load [2/2] 2.71ns
:6  %node_father_load = load i32* %node_father_addr, align 4


 <State 2>: 5.42ns
ST_2: node_father_load [1/2] 2.71ns
:6  %node_father_load = load i32* %node_father_addr, align 4

ST_2: tmp_2 [1/1] 0.00ns
:7  %tmp_2 = sext i32 %node_father_load to i64

ST_2: node_cost_addr [1/1] 0.00ns
:8  %node_cost_addr = getelementptr [2304 x i32]* @node_cost, i64 0, i64 %tmp_2

ST_2: node_cost_load [2/2] 2.71ns
:9  %node_cost_load = load i32* %node_cost_addr, align 4


 <State 3>: 7.86ns
ST_3: i_read [1/1] 1.04ns
:1  %i_read = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %i)

ST_3: tmp [1/1] 0.00ns
:2  %tmp = call i2 @_ssdm_op_PartSelect.i2.i4.i32.i32(i4 %i_read, i32 2, i32 3)

ST_3: icmp [1/1] 1.36ns
:3  %icmp = icmp eq i2 %tmp, 1

ST_3: node_cost_load [1/2] 2.71ns
:9  %node_cost_load = load i32* %node_cost_addr, align 4

ST_3: stg_18 [1/1] 0.00ns
:10  br i1 %icmp, label %2, label %1

ST_3: tmp_3 [1/1] 2.44ns
:0  %tmp_3 = add nsw i32 %node_cost_load, 10

ST_3: node_cost_addr_1 [1/1] 0.00ns
:1  %node_cost_addr_1 = getelementptr [2304 x i32]* @node_cost, i64 0, i64 %tmp_s

ST_3: stg_21 [1/1] 2.71ns
:2  store i32 %tmp_3, i32* %node_cost_addr_1, align 4

ST_3: stg_22 [1/1] 0.00ns
:3  br label %3

ST_3: node_cost_addr_2 [1/1] 0.00ns
:0  %node_cost_addr_2 = getelementptr [2304 x i32]* @node_cost, i64 0, i64 %tmp_s

ST_3: node_cost_load_1 [2/2] 2.71ns
:1  %node_cost_load_1 = load i32* %node_cost_addr_2, align 4


 <State 4>: 6.65ns
ST_4: node_cost_load_1 [1/2] 2.71ns
:1  %node_cost_load_1 = load i32* %node_cost_addr_2, align 4

ST_4: tmp1 [1/1] 1.97ns
:2  %tmp1 = add i32 %node_cost_load_1, 14

ST_4: tmp_7 [1/1] 1.97ns
:3  %tmp_7 = add i32 %tmp1, %node_cost_load


 <State 5>: 2.71ns
ST_5: stg_28 [1/1] 2.71ns
:4  store i32 %tmp_7, i32* %node_cost_addr_2, align 4

ST_5: stg_29 [1/1] 0.00ns
:5  br label %3

ST_5: stg_30 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
